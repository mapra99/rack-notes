c
@rides.map {|ride| ride }
@rides.map {|ride| ride[0] }
@rides.map {|ride| ride[1] }
@rides[1].map {|ride| ride[1] }
@rides[1].map {|ride| puts ride[1] }
@rides[1].map {|ride| puts ride[0] }
@rides[1].map {|ride| puts ride[1] }
@rides[1].map {|ride| puts ride[0] }
@rides[1].map {|ride| puts ride }
@rides[1][0]
@rides[1]
all
c
@rides
@rides.map { |ride| serialize(ride) }
all
c
all.find { |user| user[:id] == id }
all
exit
ride
c
serialize(user)
user
n
id
continue
user
continue
user
exit
all.find { |_, user| user[:api_key] == key }
def serialize(user)
all.find { |_, user| user[:api_key] == key }
[all.find { |_, user| user[:api_key] == key }].to_h
all.find { |_, user| user[:api_key] == key }.to_h
all.find { |_, user| user[:api_key] == key }.to_hash
all.find { |_, user| user[:api_key] == key }
   15:         .find { |_, user| user[:api_key] == key }
all
c
user
exit
all.find do |id, user| user.api_key == key end.first
all.find do |id, user| user[:api_key] == key end.first
all.find do |id, user| user[:api_key] == key end
key = "bbbbbb"
all.find do |id, user| user[:api_key] == key end
all.find do |id, user| user[:api_key] == key
all.find do |id, user|
   16:       end
   15:         user.api_key == key
all.find do |id, user|
c
all.find do |id, user| user[:api_key] == key end
key = "bbbbbb"
all.find do |id, user| user[:api_key] == key end
all
all.find do |user, id| user[:api_key] == key end
   16:       end
   15:         user.api_key == key
all.find do |user, id|
key
exit
Database::Rides.get(2)
Database::Rides.get(1)
Database::Ridesget
Database::Rides.all
Database::Rides.rides
Database::Rides
Database.rides
exit
index_pointer
exit
index_pointer
c
exit
rides
self.public_method(:index_pointer)
index_pointer
index_pointer.class
index_pointer
index_pinter
index_pinter.class
self.index_pointer
index_pointer
c
rides
c
rides
c
self.rides
@rides
rides
exit
Database::Rides.all
Database::Rides.asdasd
Database::Rides.class.all
Database::Rides.all
c
C
RIDES
RIDES[RIDES.length + 1] = attrs
RIDES[RIDES.length]
attrs
c
ride
